# # name: Build and Deploy Code # This first line is the name of the GitWork Flow

# # on: [push, pull_request]

# # jobs:
# #   job1:
# #     env:
# #       DATABASE_HOSTNAME=localhost
# #       DATABASE_PORT=5432
# #       DATABASE_PASSWORD=DAVID150
# #       DATABASE_NAME=fastapi
# #       DATABASE_USERNAME=postgres
# #       SECRET_KEY=09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7
# #       ALGORITHM=HS256
# #       ACCESS_TOKEN_EXPIRE_MINUTES=30
# #     runs-on: ubuntu-latest
# #     steps:
# #       - name: pulling git repo
# #         uses: actions/checkout@v4
# #       # - name: Check OS
# #       #   run: echo "Running on Linux"
# #       - name: Install python version 3.11.2
# #         uses: actions/setup-python@v5
# #         with:
# #           python-version: "3.11.2"
# #       - name: update pip
# #         run: python -m pip install --upgrade pip
# #       - name: install all dependencies
# #         run: pip install -r requirements.txt
# #       - name: test with pytest
# #         run: |
# #           pip install pytest
# #           export PYTHONPATH=$(pwd)
# #           pytest
  

# name: Build and Deploy Code # This first line is the name of the GitHub Workflow

# on: [push, pull_request]

# jobs:
#   job1:
#     environment:
#       name: testing
#     env:
#       DATABASE_HOSTNAME: ${{secrets.DATABASE_HOSTNAME}}
#       DATABASE_PORT: ${{secrets.DATABASE_PORT}}
#       DATABASE_PASSWORD: ${{secrets.DATABASE_PASSWORD }}
#       DATABASE_NAME: ${{secrets.DATABASE_NAME}}
#       DATABASE_USERNAME: ${{secrets.DATABASE_USERNAME}}
#       SECRET_KEY: ${{secrets.SECRET_KEY}}
#       ALGORITHM: ${{secrets.ALGORITHM}}
#       ACCESS_TOKEN_EXPIRE_MINUTES: ${{secrets.ACCESS_TOKEN_EXPIRE_MINUTES}}

#     services:
#       postgres:
#         image: postgres
#         env:
#           POSTGRES_PASSWORD: ${{secrets.DATABASE_PASSWORD }}
#           POSTGRES_DB: ${{secrets.DATABASE_NAME}}
#         ports:
#           - 5432:5432
#         options: >-
#           --health-cmd pg_isready
#           --health-interval 10s
#           --health-timeout 5s
#           --health-retries 5

#     runs-on: ubuntu-latest

#     steps:
#       - name: Pulling git repo
#         uses: actions/checkout@v4

#       - name: Install Python 3.11.2
#         uses: actions/setup-python@v5
#         with:
#           python-version: "3.11.2"

#       - name: Update pip
#         run: python -m pip install --upgrade pip

#       - name: Install all dependencies
#         run: pip install -r requirements.txt
      

#       - name: Test with pytest
#         run: |
#           pip install pytest
#           export PYTHONPATH=$(pwd)
#           pytest

#       # - name: Login to Docker Hub
#       #   uses: docker/login-action@v1
#       #   with:
#       #     username: ${{secrets.DOCKER_HUB_USERNAME}}
#       #     password: ${{secrets.DOCKER_HUB_ACCESS_TOKEN}}

#       # - name: Set up Docker buildx
#       #   id: docker_buildx
#       #   uses: docker/setup-buildx-action@v1

#       # - name: Build and push
#       #   id: docker_build
#       #   uses: docker/build-push-action@v2
#       #   with:
#       #     context: ./
#       #     file: ./Dockerfile
#       #     builder: ${{steps.buildx.outputs.name}}
#       #     push: true
#       #     tags: ${{secrets.DOCKER_HUB_USERNAME}}/fastapi:latest
#       #     cache-from: type-local,scr-/tmp/.buildx-cache
#       #     cache to: type-local,dest-/tmp/.buildx-cache
#       # - name: Image digest
#       #   run: echo ${{steps.docker.build.outputs.digest}}
#       - name: Login to Docker Hub
#         uses: docker/login-action@v3
#         with:
#           username: ${{ secrets.DOCKER_HUB_USERNAME }}
#           password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

#       - name: Set up Docker Buildx
#         id: docker_buildx
#         uses: docker/setup-buildx-action@v3

#       - name: Build and Push
#         id: docker_build
#         uses: docker/build-push-action@v6
#         with:
#           context: ./
#           file: ./Dockerfile
#           builder: ${{ steps.docker_buildx.outputs.name }}
#           push: true
#           tags: ${{ secrets.DOCKER_HUB_USERNAME }}/fastapi:latest
#           cache-from: type=local,src=/tmp/.buildx-cache
#           cache-to: type=local,dest=/tmp/.buildx-cache

#       - name: Image Digest
#         run: echo ${{ steps.docker_build.outputs.digest }}

# name: Build and Deploy Code # GitHub Workflow Name

# on: [push, pull_request]

# jobs:
#   job1:
#     environment:
#       name: testing
#     env:
#       DATABASE_HOSTNAME: ${{secrets.DATABASE_HOSTNAME}}
#       DATABASE_PORT: ${{secrets.DATABASE_PORT}}
#       DATABASE_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
#       DATABASE_NAME: ${{secrets.DATABASE_NAME}}
#       DATABASE_USERNAME: ${{secrets.DATABASE_USERNAME}}
#       SECRET_KEY: ${{secrets.SECRET_KEY}}
#       ALGORITHM: ${{secrets.ALGORITHM}}
#       ACCESS_TOKEN_EXPIRE_MINUTES: ${{secrets.ACCESS_TOKEN_EXPIRE_MINUTES}}

#     services:
#       postgres:
#         image: postgres
#         env:
#           POSTGRES_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
#           POSTGRES_DB: ${{secrets.DATABASE_NAME}}
#         ports:
#           - "5432:5432"
#         options: >-
#           --health-cmd pg_isready
#           --health-interval 10s
#           --health-timeout 5s
#           --health-retries 5

#     runs-on: ubuntu-latest

#     steps:
#       - name: Pulling git repo
#         uses: actions/checkout@v4

#       - name: Install Python 3.11.2
#         uses: actions/setup-python@v5
#         with:
#           python-version: "3.11.2"

#       - name: Update pip
#         run: python -m pip install --upgrade pip

#       - name: Install all dependencies
#         run: pip install -r requirements.txt
      
#       - name: Run tests with pytest
#         run: pytest

#       - name: Login to Docker Hub
#         uses: docker/login-action@v3
#         with:
#           username: ${{ secrets.DOCKER_HUB_USERNAME }}
#           password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
#           logout: true

#       - name: Set up Docker Buildx
#         id: docker_buildx
#         uses: docker/setup-buildx-action@v3

#       - name: Build and Push
#         id: docker_build
#         uses: docker/build-push-action@v6
#         with:
#           context: .
#           file: ./Dockerfile
#           builder: ${{ steps.docker_buildx.outputs.builder }}
#           push: true
#           tags: ${{ secrets.DOCKER_HUB_USERNAME }}/fastapi:latest
#           cache-from: type=gha
#           cache-to: type=gha,mode=max

#       - name: Image Digest
#         run: echo "Docker Image Digest: ${{ steps.docker_build.outputs.digest }}"
name: Build and Deploy Code # GitHub Workflow Name

on: [push, pull_request]

jobs:
  job1:
    environment:
      name: testing

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
          POSTGRES_DB: ${{ secrets.DATABASE_NAME }}
        ports:
          - "5432:5432"
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    runs-on: ubuntu-latest

    steps:
      - name: Pulling git repo
        uses: actions/checkout@v4

      - name: Install Python 3.11.2
        uses: actions/setup-python@v5
        with:
          python-version: "3.11.2"

      - name: Update pip
        run: python -m pip install --upgrade pip

      - name: Set environment variables
        run: |
          echo "DATABASE_HOSTNAME=${{ secrets.DATABASE_HOSTNAME }}" >> $GITHUB_ENV
          echo "DATABASE_PORT=${{ secrets.DATABASE_PORT }}" >> $GITHUB_ENV
          echo "DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }}" >> $GITHUB_ENV
          echo "DATABASE_NAME=${{ secrets.DATABASE_NAME }}" >> $GITHUB_ENV
          echo "DATABASE_USERNAME=${{ secrets.DATABASE_USERNAME }}" >> $GITHUB_ENV
          echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> $GITHUB_ENV
          echo "ALGORITHM=${{ secrets.ALGORITHM }}" >> $GITHUB_ENV
          echo "ACCESS_TOKEN_EXPIRE_MINUTES=${{ secrets.ACCESS_TOKEN_EXPIRE_MINUTES }}" >> $GITHUB_ENV

      - name: Install all dependencies
        run: pip install -r requirements.txt
      
      - name: Run tests with pytest
        run: pytest

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
          logout: true

      - name: Set up Docker Buildx
        id: docker_buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and Push
        id: docker_build
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          builder: ${{ steps.docker_buildx.outputs.name }}
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/fastapi:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Image Digest
        run: echo "Docker Image Digest: ${{ steps.docker_build.outputs.digest }}"
